name: deploy-latest-dev-to-site

on:
  push:
    # branches:
    #   - dev  # Set a branch to deploy
    #   - '!develop'
    #   - '!staging'
    tags:
      - '*.*.*' # from .env of dev
      - '!'
  # schedule: # too slow, abandoned
    # - cron: '0 * * * *' # every hour

jobs:
  to-staging:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout this Repo
        uses: actions/checkout@v2
        with:
          # ref: 'dev'
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Prepare New Version
        id: prepare_new_version
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          NEW_VER="$(eval "bash ./content-auto-update.sh staging ./.env")"
          if ! [[ $NEW_VER =~ ^[0-9].[0-9].[0-9]$ ]]; then
            NEW_VER="0.1.1"
          fi
          echo "::set-output name=new_ver::${NEW_VER}"
          sed -i 's/    version = "[0-9]\.[0-9]\.[0-9]"/    version = "'"$NEW_VER"'"/' ./config.toml
      
      - name: Deploy-DEV
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG_NAME="${GITHUB_REF##refs/tags/}"
          sed -i "s/^STAGING_VERSION=.*/STAGING_VERSION=${TAG_NAME}/" ./.env
          sed -i 's/    version = "[0-9]\.[0-9]\.[0-9]"/    version = "'"$TAG_NAME"'"/' ./config.toml
          git config --global user.email "robert010256@gmail.com"
          git config --global user.name "chuzhu"
          git add ./.env
          git add ./config.toml
          git commit -m "staging to ${TAG_NAME}"
          git push origin dev

      - name: Deploy-DEV
        if: startsWith(github.ref, 'refs/tags/') != true
        run: |
          git config --global user.email "robert010256@gmail.com"
          git config --global user.name "chuzhu"
          git add ./.env
          git add ./config.toml
          git commit -m "staging to ${{ steps.prepare_new_version.outputs.new_ver }}"
          git push origin dev
      
      - name: Deploy-STAGING
        if: success() && github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/')
        uses: peaceiris/actions-gh-pages@v3
        with:
          user_name: chuzhu
          user_email: robert010256@gmail.com
          publish_dir: .
          publish_branch: staging
          personal_token: ${{ secrets.PERSONAL_TOKEN }}
          commit_message: 'Dev to Staging: ${GITHUB_REF##refs/tags/}'
          tag_name: ${GITHUB_REF##refs/tags/}
          tag_message: 'site update: ${GITHUB_REF##refs/tags/}'

      - name: Deploy-STAGING
        if: success() && github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') != true
        uses: peaceiris/actions-gh-pages@v3
        with:
          user_name: chuzhu
          user_email: robert010256@gmail.com
          publish_dir: .
          publish_branch: staging
          personal_token: ${{ secrets.PERSONAL_TOKEN }}
          commit_message: 'Dev to Staging: ${{ steps.prepare_new_version.outputs.new_ver }}'
          tag_name: ${{ steps.prepare_new_version.outputs.new_ver }}
          tag_message: 'site update: ${{ steps.prepare_new_version.outputs.new_ver }}'

  staging-to-hugo:
    needs: to-staging
    runs-on: macos-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          ref: 'staging'
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          # hugo-version: 'latest'
          hugo-version: '0.80.0'
          extended: true

      - name: Clean public directory
        run: rm -rf public

      # - name: Cache dependencies
      #   uses: actions/cache@v2
      #   with:
      #     path: /tmp/hugo_cache
      #     key: ${{ runner.os }}-hugomod-${{ hashFiles('**/go.sum') }}
      #     restore-keys: |
      #       ${{ runner.os }}-hugomod-

      - name: Build
        run: hugo -t erblog --gc --minify --cleanDestinationDir

      - name: Prepare tag
        id: prepare_tag
        if: startsWith(github.ref, 'refs/tags/') != true
        # if: "!startsWith(github.ref, 'refs/tags/')"
        run: |
          TAG_NAME=$(eval "cat ./.env | grep "STAGING_VERSION=*.*.*" | tr -d -c '[0-9 .]'")
          echo "::set-output name=tag_name::${TAG_NAME}"

      - name: Deploy
        if: success() && github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/')
        uses: peaceiris/actions-gh-pages@v3
        with:
          user_name: chuzhu
          user_email: robert010256@gmail.com
          # github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          publish_branch: main
          external_repository: robertchu1205/robertchu1205.github.io
          # deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          personal_token: ${{ secrets.PERSONAL_TOKEN }}
          # commit_message: 'Staging: ${{ github.event.head_commit.message }}'
          commit_message: 'From Staging: ${GITHUB_REF##refs/tags/}'
          tag_name: ${GITHUB_REF##refs/tags/}
          tag_message: 'Staging: ${GITHUB_REF##refs/tags/}'